{languages, DocumentHighlight, DocumentHighlightKind} = import 'vscode'

{is_at_loc, decls_by_scope, get_idents, get_decls, get_refs, get_refs_for_decl} = import './traverse'
{to_larix_pos, range} = import './loc'



find_refs_for_decl = fn all_refs, decl:
  pipe get_refs_for_decl all_refs, decl:
    map {idents}:
      ...idents



find_refs_by_loc = fn ast, loc:
  idents = get_idents ast
  scopes = decls_by_scope idents
  all_refs = get_refs idents, scopes

  pipe idents:
    filter {expr}: is_at_loc expr, loc
    map ident:
      # all other decls are shaddowed by ident
      [decl] = get_decls ident, scopes
      ...find_refs_for_decl all_refs, decl



provide_highlights = fn async_parse: fn doc, pos:
  ast = await async_parse doc

  refs = find_refs_by_loc ast, to_larix_pos pos

  [...locs] = pipe refs:
    map {decl, expr}:
      kind = match decl:
        true: DocumentHighlightKind.Write
        else: DocumentHighlightKind.Read

      new DocumentHighlight
        range expr.loc
        kind
  locs



add_highlights_provider = fn {subscriptions}, async_parse:

  subscr = languages.registerDocumentHighlightProvider
    'fink'
    {provideDocumentHighlights: provide_highlights async_parse}

  subscriptions.push subscr

