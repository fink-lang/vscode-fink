{IndentAction, languages} = import 'vscode'
{rx} = import '@fink/std-lib/regex.fnk'

wordPattern = rx'
    (-?\d*\.\d\w*)
    |
    ([^~!@$^&*()=+\-\[{\]}\\|:\'",.<>/\s]+)
  '


jsx_conf = rec:
  wordPattern,
  onEnterRules: list:
    rec:
      beforeText: rx'^.*[^/]>$'
      afterText: rx'^$'
      action: rec:
        indentAction: IndentAction.Indent

    rec:
      beforeText: rx'^.*<.+$'
      afterText: rx'^.*$'
      action: rec:
        indentAction: IndentAction.Indent



fink_conf = rec:
  wordPattern,
  onEnterRules: list:
    # match doc comment
    rec:
      beforeText: rx'^\s*---\s*$'
      action: rec:
        indentAction: IndentAction.None

    # match end of str on its own: '|
    rec:
      beforeText: rx'^\s*[\'"]{1}\s*$'
      afterText: rx'^$',
      action: rec:
        indentAction: IndentAction.Outdent

    # match first indentation after auto closing: '|'
    rec:
      beforeText: rx'^.*[\'"]{1}\s*$'
      afterText: rx'^[\'"]$'
      action: rec:
        indentAction: IndentAction.Indent

    # match first indentating existing: foo = '| spam...
    rec:
      beforeText: rx'^.+[=,:(]\s*[\'"]{1}\s*$'
      action: rec:
        indentAction: IndentAction.Indent

    # match operators and blocks: fold ...:|
    rec:
      beforeText: rx'^.+[:=+<\-/*]{1}\s*$'
      action: rec:
        indentAction: IndentAction.Indent


init_lang = fn:
  languages.setLanguageConfiguration 'fink-jsx', jsx_conf
  languages.setLanguageConfiguration 'fink', fink_conf

