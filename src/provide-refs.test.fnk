{describe, it, expect, mock, mock_fn} = import '@fink/jest'
{to_equal} = import '@fink/jest'

{parse} = import '@fink/larix'


mock
  'vscode'
  fn: dict:
    Position: mock_fn fn ...pos: {pos}
    Range: mock_fn fn ...range: {range}
    Location: mock_fn fn ...location: {location}

    languages: dict:
      registerReferenceProvider: mock_fn()

  {virtual: true}


{languages} = import 'vscode'

{add_refs_provider} = import './provide-refs'


async_parse = fn doc:
  await parse doc.getText(), `${doc.uri}`

ctx = dict:
  subscriptions: dict:
    push: mock_fn()

document = dict:
  getText: fn: `
    foo = 123
    bar = foo.bar + 456
    spam = fn foo:
      log foo, bar

    try:
      foo + 1

    Foo = fn: <></>

    <Foo ni={foo}>
      {foo}
    </Foo>
    `
  uri: {test: 'test-uri:test.fnk'}
  languageId: 'fink'


describe 'reference provider', fn:

  it 'provides refs for ident', fn:
    add_refs_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerReferenceProvider

    pos = {line: 0, character: 2}

    expect
      await provider.provideReferences document, pos
      to_equal list:
        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [0, 0]}, {pos: [0, 3]}]}

        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [1, 6]}, {pos: [1, 9]}]}

        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [6, 2]}, {pos: [6, 5]}]}

        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [10, 9]}, {pos: [10, 12]}]}

        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [11, 3]}, {pos: [11, 6]}]}


  it 'provides refs for jsx elem', fn:
    add_refs_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerReferenceProvider

    pos = {line: 8, character: 2}

    expect
      await provider.provideReferences document, pos
      to_equal list:
        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [8, 0]}, {pos: [8, 3]}]}

        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [10, 1]}, {pos: [10, 4]}]}


  it 'provides refs for shadowed idents', fn:
    add_refs_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerReferenceProvider

    pos = {line: 3, character: 7}

    expect
      await provider.provideReferences document, pos
      to_equal list:
        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [2, 10]}, {pos: [2, 13]}]}

        dict: 'location': list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [3, 6]}, {pos: [3, 9]}]}
