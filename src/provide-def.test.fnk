{describe, it, expect, mock, mock_fn} = import '@fink/jest/test.fnk'
{to_equal} = import '@fink/jest/test.fnk'

{parse} = import '@fink/larix/parser.fnk'


mock
  'vscode'
  fn: dict:
    Uri: dict:
      joinPath: fn ...join_path: {join_path}

    Position: mock_fn fn ...pos: {pos}
    Range: mock_fn fn ...range: {range}
    Location: mock_fn fn ...location: {location}

    languages: dict:
      registerDefinitionProvider: mock_fn ()

    workspace: dict:
      fs: dict:
        stat: fn: {type: 1}

  {virtual: true}


{languages} = import 'vscode'

{add_definition_provider} = import './provide-def.fnk'


async_parse = fn doc:
  await parse
    doc.getText ()
    '${doc.uri}'

ctx = dict:
  subscriptions: dict:
    push: mock_fn ()


document = dict:
  getText: fn: "
    {Spam, shrub} = import './foobar.fnk'

    foo = 1234
    log foo

    <Spam />

    shrub'foobar'
    "
  uri: {test: 'test-uri:test.fnk'}
  languageId: 'fink'


describe 'definition provider', fn:

  it 'provides definition of ident', fn:
    add_definition_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerDefinitionProvider

    pos = {line: 3, character: 5}

    expect
      await provider.provideDefinition document, pos
      to_equal list:
        dict: location: list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [2, 0]}, {pos: [2, 3]}]}


  it 'provides definition of jsx elem', fn:
    add_definition_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerDefinitionProvider

    pos = {line: 5, character: 2}

    expect
      await provider.provideDefinition document, pos
      to_equal list:
        dict: location: list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [0, 1]}, {pos: [0, 5]}]}


  it 'provides definition for template tag', fn:
    add_definition_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerDefinitionProvider

    pos = {line: 7, character: 2}

    expect
      await provider.provideDefinition document, pos
      to_equal list:
        dict: location: list:
          {test: 'test-uri:test.fnk'}
          {range: [{pos: [0, 7]}, {pos: [0, 12]}]}


  it 'provides definition for module', fn:
    add_definition_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerDefinitionProvider

    pos = {line: 0, character: 30}

    expect
      await provider.provideDefinition document, pos
      to_equal list:
        dict:
          location: list:
            dict:
              join_path: list:
                {test: 'test-uri:test.fnk'}
                '..'
                './foobar.fnk'

            {range: [{pos: [0, 1]}, {pos: [0, 1]}]}
          originSelectionRange:
            {range: [{pos: [0, 24]}, {pos: [0, 36]}]}



 it 'provides no definition', fn:
    add_definition_provider ctx, async_parse
    {mock: {calls: [[, provider]]}} = languages.registerDefinitionProvider

    pos = {line: 2, character: 8}

    expect
      await provider.provideDefinition document, pos
      to_equal []




