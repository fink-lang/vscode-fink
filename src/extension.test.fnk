{describe, it, expect, mock, mock_fn} = import '@fink/jest/test.fnk'
{was_called, was_called_with, any} = import '@fink/jest/test.fnk'


mock
  'vscode'
  fn: rec:
    IndentAction: {IndentOutdent: 'test-indent-outdent'}
    SemanticTokensLegend: mock_fn _
    SnippetString: mock_fn _
    MarkdownString: mock_fn fn: rec:
      appendCodeblock: mock_fn _

    languages: rec:
      setLanguageConfiguration: mock_fn _
      registerDocumentSemanticTokensProvider: mock_fn _
      registerDocumentHighlightProvider: mock_fn _
      registerCompletionItemProvider: mock_fn _
      registerReferenceProvider: mock_fn _
      registerDefinitionProvider: mock_fn _
      createDiagnosticCollection: mock_fn _

    workspace: rec:
      findFiles: mock_fn fn: []
      onDidChangeTextDocument: mock_fn _
      onDidOpenTextDocument: mock_fn _
      onDidCloseTextDocument: mock_fn _

  {virtual: true}


{languages} = import 'vscode'

{activate} = import './extension.fnk'
{Object} = import '@fink/js-interop/globals.fnk'


describe 'extension', fn:

  it 'activates', fn:
    ctx = rec:
      subscriptions: rec:
        push: mock_fn _

    activate ctx

    expect
      languages.setLanguageConfiguration
      was_called_with 'fink-jsx', any Object

    expect
      languages.setLanguageConfiguration
      was_called_with 'fink', any Object

    expect
      languages.registerDocumentSemanticTokensProvider
      was_called

    expect
      languages.registerDocumentHighlightProvider
      was_called

    expect
      languages.registerCompletionItemProvider
      was_called

    expect
      languages.registerDefinitionProvider
      was_called_with 'fink', any Object

    expect
      languages.registerReferenceProvider
      was_called_with 'fink', any Object
