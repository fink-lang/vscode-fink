// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`completion provider provides completions 1`] = `
Array [
  Object {
    "completion": Array [
      "ni",
      "test-ref",
    ],
  },
  Object {
    "completion": Array [
      "foo",
      "test-struct",
    ],
  },
  Object {
    "completion": Array [
      "bar",
      "test-text",
    ],
  },
  Object {
    "completion": Array [
      "shrub",
      "test-func",
    ],
  },
  Object {
    "completion": Array [
      "spam",
      "test-const",
    ],
  },
  Object {
    "completion": Array [
      "ni",
      "test-const",
    ],
  },
  Object {
    "completion": Array [
      "match",
      "test-func",
    ],
    "documentation": Object {
      "appendCodeblock": [MockFunction],
      "markdown": Array [
        "Return the first result of \`test: result\` where foo matches \`test\`.",
        Array [
          "match foo:
  test: result
  {bar: 'spam'}: shrub
  [bar, 'spam']: shrub
  'spam': shrub
  else: ni
",
          "fink",
        ],
      ],
    },
    "insertText": Object {
      "snippet": Array [
        "match $1:
  $2: $3
  else: $4
$0",
      ],
    },
  },
  Object {
    "completion": Array [
      "pipe",
      "test-func",
    ],
    "documentation": Object {
      "appendCodeblock": [MockFunction],
      "markdown": Array [
        "Call each expression in the block with the result of the previous call,
starting with the pipe arg for the first call.",
        Array [
          "[result] = pipe [1, 2, 3, 4, 5, 6]:
  map fn item:
    item * 2
  filter fn item:
    item > 4

# == 5
",
          "fink",
        ],
      ],
    },
    "insertText": Object {
      "snippet": Array [
        "pipe $1:
  $2
$0",
      ],
    },
  },
  Object {
    "completion": Array [
      "import",
      "test-func",
    ],
    "documentation": Object {
      "appendCodeblock": [MockFunction],
      "markdown": Array [
        "Import a module from the given URI.",
        Array [
          "{foo} = import './spam.fnk'

async_load = fn:
  {a} = await import './shrub.fnk'
",
          "fink",
        ],
      ],
    },
    "insertText": Object {
      "snippet": Array [
        "import '$1'
$0",
      ],
    },
  },
]
`;
